test-about = Проверяет типы файлов и сравнивает значения.
test-error-unary-operator-expected = { $operator }: ожидается унарный оператор
test-error-missing-closing-bracket = пропущены '{ "]" }'
test-error-invalid-integer = не целое число { $value }
test-error-expected = ожидалось { $value }
test-error-expected-value = ожидалось значение
test-error-missing-argument = отсутствует аргумент после { $argument }
test-error-extra-argument = дополнительный аргумент { $argument }
test-error-unknown-operator = неизвестный оператор { $operator }
test-usage =
    test ВЫРАЖЕНИЕ
    test
    { "[ ВЫРАЖЕНИЕ ]" }
    { "[ ]" }
    { "[ ПАРАМЕТР ]" }
test-after-help =
    Выходной статус определён ВЫРАЖЕНИЕМ.

    Если ВЫРАЖЕНИЕ не задано, оно считается ложным. 
    В противном случае "ВЫРАЖЕНИЕ может быть истинным либо ложным и устанавливает выходной статус программы. 

    Оно определяется следующим образом:

    - ( ВЫРАЖЕНИЕ ) ВЫРАЖЕНИЕ истинно
    - ! ВЫРАЖЕНИЕ ВЫРАЖЕНИЕ ложно
    - ВЫРАЖЕНИЕ1 -a ВЫРАЖЕНИЕ2 оба ВЫРАЖЕНИЕ1 и ВЫРАЖЕНИЕ2 истинны
    - ВЫРАЖЕНИЕ1 -o ВЫРАЖЕНИЕ2 ВЫРАЖЕНИЕ1 или ВЫРАЖЕНИЕ2 истинно

    Строковые операторы:
    - -n СТРОКА длина СТРОКИ отлична от нуля
    - СТРОКА эквивалентна -n СТРОКА
    - -z СТРОКА длина СТРОКИ равна нулю
    - СТРОКА1 = СТРОКА2 строки равны
    - СТРОКА1 != СТРОКА2 строки не равны

    Сравнение целых чисел:
    - ЦЕЛОЕ1 -eq ЦЕЛОЕ2 ЦЕЛОЕ1 равно ЦЕЛОМУ2
    - ЦЕЛОЕ1 -ge ЦЕЛОЕ2 ЦЕЛОЕ1 больше или равно ЦЕЛОМУ2
    - ЦЕЛОЕ1 -gt ЦЕЛОЕ2 ЦЕЛОЕ1 больше ЦЕЛОГО2
    - ЦЕЛОЕ1 -le ЦЕЛОЕ2 ЦЕЛОЕ1 меньше или равно ЦЕЛОМУ2
    - ЦЕЛОЕ1 -lt ЦЕЛОЕ2 ЦЕЛОЕ1 меньше ЦЕЛОГО2
    - ЦЕЛОЕ1 -ne ЦЕЛОЕ2 ЦЕЛОЕ1 отлично от ЦЕЛОГО2

    Файловые операторы:
    - ФАЙЛ1 -ef ФАЙЛ2 ФАЙЛ1 и ФАЙЛ2 расположены на одном устройстве и имеют одинаковые номера инод
    - ФАЙЛ1 -nt ФАЙЛ2 ФАЙЛ1 новее (дата изменения), чем ФАЙЛ2
    - ФАЙЛ1 -ot ФАЙЛ2 ФАЙЛ1 старее, чем ФАЙЛ2

    - -b ФАЙЛ ФАЙЛ существует и является специальным файлом с поблочным доступом
    - -c ФАЙЛ ФАЙЛ существует и является специальным файлом с посимвольным доступом
    - -d ФАЙЛ ФАЙЛ существует и является каталогом
    - -e ФАЙЛ ФАЙЛ существует
    - -f ФАЙЛ ФАЙЛ существует и является обычным файлом
    - -g ФАЙЛ ФАЙЛ существует и имеет флаг set-group-ID
    - -G ФАЙЛ ФАЙЛ существует и принадлежит текущей действующей группе
    - -h ФАЙЛ ФАЙЛ существует и является символьной ссылкой (эквивалент -L)
    - -k ФАЙЛ ФАЙЛ существует и имеет флаг sticky
    - -L ФАЙЛ ФАЙЛ существует и является символьной ссылкой (эквивалент -h)
    - -N ФАЙЛ ФАЙЛ существует и изменён с момента последнего чтения
    - -O ФАЙЛ ФАЙЛ существует и принадлежит текущему действующему пользователю
    - -p ФАЙЛ ФАЙЛ существует и является именованным каналом
    - -r ФАЙЛ ФАЙЛ существует и доступен для чтения пользователю
    - -s ФАЙЛ ФАЙЛ существует и имеет ненулевой размер
    - -S ФАЙЛ ФАЙЛ существует и является сокетом
    - -t [ДФ] дескриптор файла ДФ открыт на терминале
    - -u ФАЙЛ ФАЙЛ существует и имеет флаг set-user-ID
    - -w ФАЙЛ ФАЙЛ существует и доступен для записи пользователю
    - -x ФАЙЛ ФАЙЛ существует и является исполняемым (и открыт для поиска)

    Все тесты, относящиеся к ФАЙЛУ, кроме -h и -L разыменовывают символьные ссылки.
    Помните, что вы должны отменить специальное значение скобок для командного интерпретатора (например, с помощью символа «\\»).
    ЦЕЛОЕ может также быть задано как -l СТРОКА, при этом оно принимает значение длины СТРОКИ.

    ЗАМЕЧАНИЕ: параметры логики -a и -o по сути двусмысленны.
    Используйте вместо них test EXPR1 && test EXPR2 или test EXPR1 || test EXPR2
    ЗАМЕЧАНИЕ: { "[" }[ имеют параметры --help и --version, но test нет.
    test считает каждый из них обычной непустой СТРОКОЙ.
    ЗАМЕЧАНИЕ: в вашем командном интерпретаторе может быть своя версия test и/или { "[" }, которая обычно заменяет версию, описанную здесь.
    Подробную информацию о поддерживаемых ею параметрах см. в документации к вашему командному интерпретатору.
